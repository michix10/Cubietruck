---

# ------------------------------------------------------
# Instala los paquetes y prepara los servicios nativos para arrancar.
#
# Como cada entorno (Wheezy, Jessie, Ubuntu) tiene su conjunto de
# paquetes propios con su nomenclatura y dependencias, todas las 
# instalaciones las manejo con este fichero. Cuando cambie de sistema,
# Este debería ser el único playbook que haga falta actualizar.
# ------------------------------------------------------

# Repositorio gstreamer0.10-ffmpeg para ubuntu
# https://launchpad.net/~mc3man/+archive/ubuntu/gstffmpeg-keep
#- name: Agregar repositorio de gstreamer0.10-ffmpeg
#  apt_repository:
#    repo: ppa:mc3man/gstffmpeg-keep
#    state: present
#    update_cache: yes

- name: Actualizacion de cache de apt
  apt:
    update_cache: yes
    upgrade: safe

- name: Instalacion de paquetes requeridos (Wheezy)
  apt:
    update_cache: no
    name: "{{ item }}"
    state: installed
  with_items:
# Paquetes genericos, para explotar el sistema
    - iptables-persistent
    - resolvconf
    - dnsmasq
    - dnsutils
    - lvm2
    - runit
    - python-apt
#   - ddclient
#     LXDE "headless", usando el framebuffer
#     http://superuser.com/questions/524811
    - lxde
    - xvfb
    - xvnc
    - lightdm
#     Soporte de bluetooth
#     https://github.com/kdeenkhoorn/cubietruck-scripts/tree/master/bluetooth
    - bluetooth
    - bluez
    - bluez-firmware
    - bluez-alsa
    - libbluetooth3
    - libbluetooth-dev
    - blueman
# Para construir dependencias de mopidy, beets y otros
    - python-dev
    - python-pip
    - python-virtualenv
    - build-essential
# Para probar y procesar el sonido
    - alsaplayer
    - alsaplayer-text
    - mp3gain
# Paquetes para Mopidy
    - gstreamer-tools
    - python-gst0.10
    - gstreamer0.10-plugins-good
    - gstreamer0.10-plugins-bad
    - gstreamer0.10-plugins-ugly
    - gstreamer0.10-ffmpeg
    - gstreamer0.10-alsa
# Para seafile
    - mysql-server
    - mysql-client
    - python-imaging
    - python-mysqldb
# Para montar el proxy inverso que reparta el acceso web
    - nginx
# Para el torrent
    - transmission-daemon
# Para el servidor minidlna: Lo voy a instalar desde el codigo fuente
# porque el paquete preinstalado de armbian wheezy me falla.
# Ver: http://www.htpcbeginner.com/install-minidlna-on-ubuntu-ultimate-guide/
    - gettext
    - autopoint
    - libavcodec-dev
    - libavutil-dev
    - libavformat-dev
    - libjpeg-dev
    - libsqlite3-dev
    - libexif-dev
    - libid3tag0-dev
    - libogg-dev
    - libvorbis-dev
    - libflac-dev
# Para el servidor CIFS
    - samba
# Para smbpasswd, los otros paquetes no lo incluyen
    - samba-common-bin
# Para Speech-Recognizer
    - flac
    - libportaudio-dev
    - portaudio19-dev
# Para Universal Media Server
#    - mediainfo
#    - libzen0
#    - mplayer
#    - default-jre-headless

#- name: Copiar mp3gain compilado para armhf
#  copy:
#    src: bin/mp3gain
#    dest: /usr/bin/mp3gain
#    owner: root
#    group: root
#    mode: "0755"

- name: Garantizar que los servicios se inician al arranque
  service:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - iptables-persistent
    - resolvconf
    - dnsmasq
    - mysql
    - nginx
    - transmission-daemon
    - samba
    - lightdm
    - bluetooth
#   - ddclient
#   - minidlna
#     Para iniciar runit, hay que rebotar o ejecutar "init q"
#   - runit
